FROM python:3.8-slim-buster

ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && apt-get install -y \
	python3-opencv ca-certificates python3-dev git wget sudo  \
	cmake ninja-build protobuf-compiler libprotobuf-dev nano && \
  rm -rf /var/lib/apt/lists/*
RUN ln -sv /usr/bin/python3 /usr/bin/python

# create a non-root user
ARG USER_ID=1000
RUN useradd -m --no-log-init --system  --uid ${USER_ID} appuser -g sudo
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
USER appuser
WORKDIR /home/appuser

ENV PATH="/home/appuser/.local/bin:${PATH}"
RUN wget https://bootstrap.pypa.io/get-pip.py && \
	python3 get-pip.py --user && \
	rm get-pip.py

# install dependencies
# See https://pytorch.org/ for other options if you use a different version of CUDA
RUN pip install --user tensorboard
RUN pip install --user torch==1.5.0+cpu torchvision==0.6.0+cpu -f https://download.pytorch.org/whl/torch_stable.html

RUN pip install --user 'git+https://github.com/facebookresearch/fvcore'

# Detectron2
RUN python -m pip install detectron2 -f \ 
 https://dl.fbaipublicfiles.com/detectron2/wheels/cpu/torch1.5/index.html
  
# Set a fixed model cache directory.
ENV FVCORE_CACHE="/tmp"
WORKDIR /app/

# Set a path to weight directory
ENV WEIGHT_PATH="./weight/"

COPY app.py ./
COPY engine.py ./
COPY run.py ./
COPY README.md ./
COPY requirements.txt ./

# install requirements libraries for training
RUN python -m pip install -r requirements.txt

